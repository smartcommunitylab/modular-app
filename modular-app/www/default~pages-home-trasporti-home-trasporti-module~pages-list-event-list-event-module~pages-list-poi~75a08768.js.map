{"version":3,"sources":["webpack:///./node_modules/ng-in-viewport/fesm5/ng-in-viewport.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AAC+H;AACnH;AACqB;AAC1B;;AAExC;AACA;AACA,cAAc,WAAW;AACzB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,uCAAuC,wDAAwD;AAC5H;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B,EAAE;AACzF;AACA;AACA,4BAA4B,sDAAQ;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC,EAAE;AACnF;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oDAAoD,kDAAkD,EAAE;AACxG;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,2EAA2E,sCAAsC,mCAAmC,EAAE,EAAE,EAAE;AAC1J;AACA;AACA,iCAAiC,sDAAQ;AACzC;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,+BAA+B,EAAE;AAC9G;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN,2DAA2D,sEAAgB,EAAE,gDAAgD,8BAA8B,4DAAM,CAAC,oDAAM,GAAG,EAAE,gDAAgD;AAC7N;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAY;AAC5C,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA,sBAAsB,6DAAM,mBAAmB,iEAAiE,EAAE;AAClH,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,uBAAuB,EAAE;AACzB,sBAAsB,4BAA4B,eAAe;AACjE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,0CAA0C,oCAAoC;AAC9E;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,IAAI;AAC/E,SAAS,OAAO,wDAAU,GAAG;AAC7B,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,gCAAgC;AACjE,8BAA8B,OAAO,oDAAM,EAAE;AAC7C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEqI;;AAErI,2CAA2C,cAAc,+rnB","file":"default~pages-home-trasporti-home-trasporti-module~pages-list-event-list-event-module~pages-list-poi~75a08768.js","sourcesContent":["import { __spread } from 'tslib';\nimport { Injectable, NgZone, NgModule, Directive, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, defineInjectable, inject } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar InViewportConfigDirection = {\r\n    BOTH: 'both',\r\n    VERTICAL: 'vertical',\r\n    HORIZONTAL: 'horizontal',\r\n};\r\nvar /** @type {?} */ DEFAULT_THRESHOLD = [0, 1];\r\nvar InViewportConfig = /** @class */ (function () {\r\n    function InViewportConfig(options) {\r\n        var _this = this;\r\n        this._rootMargin = '0px 0px 0px 0px';\r\n        this._threshold = __spread(DEFAULT_THRESHOLD);\r\n        this._partial = true;\r\n        this._direction = InViewportConfigDirection.BOTH;\r\n        if (Object.prototype.toString.call(options) === '[object Object]') {\r\n            ['root', 'rootMargin', 'threshold', 'partial', 'direction', 'checkFn'].forEach(function (prop) {\r\n                if (options.hasOwnProperty(prop)) {\r\n                    _this[prop] = options[prop];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    Object.defineProperty(InViewportConfig.prototype, \"root\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._root;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._root = value && value.nodeType === 1 ? value : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InViewportConfig.prototype, \"rootMargin\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._rootMargin;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._rootMargin = value && typeof value === 'string' ? value : '0px 0px 0px 0px';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InViewportConfig.prototype, \"threshold\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._threshold;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            var /** @type {?} */ threshold = [];\r\n            var /** @type {?} */ isValidThreshold = function (val) { return typeof val === 'number' && val >= 0 && val <= 1; };\r\n            if (isValidThreshold(value)) {\r\n                threshold = [value];\r\n            }\r\n            else if (Array.isArray(value) && value.length) {\r\n                threshold = value.filter(function (val) { return isValidThreshold(val); });\r\n            }\r\n            if (threshold.length === 0) {\r\n                threshold = __spread(DEFAULT_THRESHOLD);\r\n            }\r\n            this._threshold = threshold;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InViewportConfig.prototype, \"partial\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._partial;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._partial = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InViewportConfig.prototype, \"direction\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._direction;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            var /** @type {?} */ isValidValue = function (val) {\r\n                return ([\r\n                    InViewportConfigDirection.BOTH,\r\n                    InViewportConfigDirection.HORIZONTAL,\r\n                    InViewportConfigDirection.VERTICAL\r\n                ].indexOf(val) >= 0);\r\n            };\r\n            this._direction = isValidValue(value) ? value : InViewportConfigDirection.BOTH;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InViewportConfig.prototype, \"checkFn\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._checkFn;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._checkFn = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InViewportConfig;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar InViewportService = /** @class */ (function () {\r\n    function InViewportService(ngZone) {\r\n        this.ngZone = ngZone;\r\n        this.trigger$ = new Subject();\r\n        this.registry = [];\r\n    }\r\n    /**\r\n     * @param {?} entries\r\n     * @return {?}\r\n     */\r\n    InViewportService.prototype.emitTrigger = /**\r\n     * @param {?} entries\r\n     * @return {?}\r\n     */\r\n    function (entries) {\r\n        var _this = this;\r\n        if (Array.isArray(entries) && entries.length) {\r\n            entries.forEach(function (entry) { return _this.trigger$.next(entry); });\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} element\r\n     * @return {?}\r\n     */\r\n    InViewportService.prototype.getRootElement = /**\r\n     * @param {?=} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        return element && element.nodeType === Node.ELEMENT_NODE ? element : undefined;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    InViewportService.prototype.findEntry = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        var _this = this;\r\n        return this.registry.find(function (entry) { return entry.root === _this.getRootElement(root); });\r\n    };\r\n    /**\r\n     * @param {?} target\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    InViewportService.prototype.register = /**\r\n     * @param {?} target\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (target, config) {\r\n        var _this = this;\r\n        this.ngZone.runOutsideAngular(function () {\r\n            var /** @type {?} */ foundedEntry = _this.findEntry(config.root);\r\n            if (foundedEntry && !foundedEntry.targets.has(target)) {\r\n                foundedEntry.targets.add(target);\r\n                foundedEntry.observer.observe(target);\r\n            }\r\n            else {\r\n                var /** @type {?} */ options = {\r\n                    root: _this.getRootElement(config.root),\r\n                    rootMargin: config.rootMargin,\r\n                    threshold: config.threshold\r\n                };\r\n                var /** @type {?} */ entry = {\r\n                    root: _this.getRootElement(config.root),\r\n                    targets: new Set([target]),\r\n                    observer: new IntersectionObserver(function (entries) { return _this.ngZone.run(function () { return _this.emitTrigger(entries); }); }, options)\r\n                };\r\n                entry.observer.observe(target);\r\n                _this.registry = __spread(_this.registry, [entry]);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} target\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    InViewportService.prototype.unregister = /**\r\n     * @param {?} target\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (target, config) {\r\n        var _this = this;\r\n        this.ngZone.runOutsideAngular(function () {\r\n            var /** @type {?} */ foundedEntry = _this.findEntry(config.root);\r\n            if (foundedEntry) {\r\n                var observer = foundedEntry.observer, targets = foundedEntry.targets;\r\n                if (targets.has(target)) {\r\n                    observer.unobserve(target);\r\n                    targets.delete(target);\r\n                }\r\n                if (targets.size === 0) {\r\n                    observer.disconnect();\r\n                    _this.registry = _this.registry.filter(function (entry) { return entry !== foundedEntry; });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    InViewportService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    InViewportService.ctorParameters = function () { return [\r\n        { type: NgZone, },\r\n    ]; };\r\n    /** @nocollapse */ InViewportService.ngInjectableDef = defineInjectable({ factory: function InViewportService_Factory() { return new InViewportService(inject(NgZone)); }, token: InViewportService, providedIn: \"root\" });\r\n    return InViewportService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar /** @type {?} */ InViewportMetadata = Symbol('InViewportMetadata');\r\nvar InViewportDirective = /** @class */ (function () {\r\n    function InViewportDirective(platformId, elementRef, inViewport) {\r\n        this.platformId = platformId;\r\n        this.elementRef = elementRef;\r\n        this.inViewport = inViewport;\r\n        this.config = new InViewportConfig();\r\n        this.subscription = new Subscription();\r\n        this.inViewportAction = new EventEmitter();\r\n    }\r\n    Object.defineProperty(InViewportDirective.prototype, \"options\", {\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.config = new InViewportConfig(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InViewportDirective.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.inViewport.register(this.elementRef.nativeElement, this.config);\r\n            this.subscription.add(this.inViewport.trigger$\r\n                .pipe(filter(function (entry) { return entry && entry.target === _this.elementRef.nativeElement; }))\r\n                .subscribe(function (entry) { return _this.emitAction(entry, false); }));\r\n        }\r\n        else {\r\n            this.emitAction(undefined, true);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InViewportDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscription.unsubscribe();\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.inViewport.unregister(this.elementRef.nativeElement, this.config);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} entry\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    InViewportDirective.prototype.check = /**\r\n     * @param {?} entry\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    function (entry, force) {\r\n        var _this = this;\r\n        var /** @type {?} */ isVisible = function () {\r\n            var /** @type {?} */ partiallyVisible = entry.isIntersecting || entry.intersectionRatio > 0;\r\n            var /** @type {?} */ completelyVisible = entry.intersectionRatio >= 1;\r\n            return _this.config.partial ? partiallyVisible : completelyVisible;\r\n        };\r\n        var /** @type {?} */ visible = force || !entry || isVisible();\r\n        return _a = {}, _a[InViewportMetadata] = { entry: entry }, _a.target = this.elementRef.nativeElement, _a.visible = visible, _a;\r\n        var _a;\r\n    };\r\n    /**\r\n     * @param {?} entry\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    InViewportDirective.prototype.emitAction = /**\r\n     * @param {?} entry\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    function (entry, force) {\r\n        var /** @type {?} */ event = this.config.checkFn\r\n            ? this.config.checkFn(entry, { force: force, config: this.config })\r\n            : this.check(entry, force);\r\n        this.inViewportAction.emit(event);\r\n    };\r\n    InViewportDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[inViewport]'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    InViewportDirective.ctorParameters = function () { return [\r\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\r\n        { type: ElementRef, },\r\n        { type: InViewportService, },\r\n    ]; };\r\n    InViewportDirective.propDecorators = {\r\n        \"options\": [{ type: Input, args: ['inViewportOptions',] },],\r\n        \"inViewportAction\": [{ type: Output },],\r\n    };\r\n    return InViewportDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar InViewportModule = /** @class */ (function () {\r\n    function InViewportModule() {\r\n    }\r\n    InViewportModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [InViewportDirective],\r\n                    exports: [InViewportDirective]\r\n                },] },\r\n    ];\r\n    return InViewportModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nexport { InViewportModule, InViewportMetadata, InViewportDirective, InViewportService, InViewportConfigDirection, InViewportConfig };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctaW4tdmlld3BvcnQuanMubWFwIiwic291cmNlcyI6WyJuZzovL25nLWluLXZpZXdwb3J0L2xpYi9pbi12aWV3cG9ydC1jb25maWcudHMiLCJuZzovL25nLWluLXZpZXdwb3J0L2xpYi9pbi12aWV3cG9ydC5zZXJ2aWNlLnRzIiwibmc6Ly9uZy1pbi12aWV3cG9ydC9saWIvaW4tdmlld3BvcnQuZGlyZWN0aXZlLnRzIiwibmc6Ly9uZy1pbi12aWV3cG9ydC9saWIvaW4tdmlld3BvcnQubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIEluVmlld3BvcnRDb25maWdEaXJlY3Rpb24ge1xuICBCT1RIID0gJ2JvdGgnLFxuICBWRVJUSUNBTCA9ICd2ZXJ0aWNhbCcsXG4gIEhPUklaT05UQUwgPSAnaG9yaXpvbnRhbCdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJblZpZXdwb3J0Q29uZmlnQ2hlY2tGbk9wdGlvbnMge1xuICBmb3JjZTogYm9vbGVhbjtcbiAgY29uZmlnOiBJblZpZXdwb3J0Q29uZmlnO1xufVxuXG5leHBvcnQgdHlwZSBJblZpZXdwb3J0Q29uZmlnQ2hlY2tGbiA9IChcbiAgZW50cnk6IEludGVyc2VjdGlvbk9ic2VydmVyRW50cnksXG4gIG9wdGlvbnM6IEluVmlld3BvcnRDb25maWdDaGVja0ZuT3B0aW9uc1xuKSA9PiBhbnk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5WaWV3cG9ydENvbmZpZ09wdGlvbnMge1xuICByb290PzogRWxlbWVudDtcbiAgcm9vdE1hcmdpbj86IHN0cmluZztcbiAgdGhyZXNob2xkPzogbnVtYmVyIHwgbnVtYmVyW107XG4gIHBhcnRpYWw/OiBib29sZWFuO1xuICBkaXJlY3Rpb24/OiBJblZpZXdwb3J0Q29uZmlnRGlyZWN0aW9uO1xuICBjaGVja0ZuPzogSW5WaWV3cG9ydENvbmZpZ0NoZWNrRm47XG59XG5cbmNvbnN0IERFRkFVTFRfVEhSRVNIT0xEID0gWzAsIDFdO1xuXG5leHBvcnQgY2xhc3MgSW5WaWV3cG9ydENvbmZpZyB7XG4gIHByaXZhdGUgX3Jvb3Q6IEVsZW1lbnQ7XG4gIHByaXZhdGUgX3Jvb3RNYXJnaW46IHN0cmluZyA9ICcwcHggMHB4IDBweCAwcHgnO1xuICBwcml2YXRlIF90aHJlc2hvbGQ6IG51bWJlciB8IG51bWJlcltdID0gWy4uLkRFRkFVTFRfVEhSRVNIT0xEXTtcbiAgcHJpdmF0ZSBfcGFydGlhbDogYm9vbGVhbiA9IHRydWU7XG4gIHByaXZhdGUgX2RpcmVjdGlvbjogSW5WaWV3cG9ydENvbmZpZ0RpcmVjdGlvbiA9IEluVmlld3BvcnRDb25maWdEaXJlY3Rpb24uQk9USDtcbiAgcHJpdmF0ZSBfY2hlY2tGbjogSW5WaWV3cG9ydENvbmZpZ0NoZWNrRm47XG5cbiAgY29uc3RydWN0b3Iob3B0aW9ucz86IEluVmlld3BvcnRDb25maWdPcHRpb25zKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvcHRpb25zKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgIFsncm9vdCcsICdyb290TWFyZ2luJywgJ3RocmVzaG9sZCcsICdwYXJ0aWFsJywgJ2RpcmVjdGlvbicsICdjaGVja0ZuJ10uZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgIHRoaXNbcHJvcF0gPSBvcHRpb25zW3Byb3BdO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0IHJvb3QoKTogRWxlbWVudCB7XG4gICAgcmV0dXJuIHRoaXMuX3Jvb3Q7XG4gIH1cblxuICBwdWJsaWMgc2V0IHJvb3QodmFsdWU6IEVsZW1lbnQpIHtcbiAgICB0aGlzLl9yb290ID0gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT09IDEgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgcm9vdE1hcmdpbigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9yb290TWFyZ2luO1xuICB9XG5cbiAgcHVibGljIHNldCByb290TWFyZ2luKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9yb290TWFyZ2luID0gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHZhbHVlIDogJzBweCAwcHggMHB4IDBweCc7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHRocmVzaG9sZCgpOiBudW1iZXIgfCBudW1iZXJbXSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVzaG9sZDtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgdGhyZXNob2xkKHZhbHVlOiBudW1iZXIgfCBudW1iZXJbXSkge1xuICAgIGxldCB0aHJlc2hvbGQgPSBbXTtcbiAgICBjb25zdCBpc1ZhbGlkVGhyZXNob2xkID0gKHZhbDogYW55KSA9PiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJyAmJiB2YWwgPj0gMCAmJiB2YWwgPD0gMTtcbiAgICBpZiAoaXNWYWxpZFRocmVzaG9sZCh2YWx1ZSkpIHtcbiAgICAgIHRocmVzaG9sZCA9IFt2YWx1ZV07XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICAgIHRocmVzaG9sZCA9IHZhbHVlLmZpbHRlcigodmFsKSA9PiBpc1ZhbGlkVGhyZXNob2xkKHZhbCkpO1xuICAgIH1cbiAgICBpZiAodGhyZXNob2xkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyZXNob2xkID0gWy4uLkRFRkFVTFRfVEhSRVNIT0xEXTtcbiAgICB9XG4gICAgdGhpcy5fdGhyZXNob2xkID0gdGhyZXNob2xkO1xuICB9XG5cbiAgcHVibGljIGdldCBwYXJ0aWFsKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9wYXJ0aWFsO1xuICB9XG5cbiAgcHVibGljIHNldCBwYXJ0aWFsKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fcGFydGlhbCA9ICEhdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGRpcmVjdGlvbigpOiBJblZpZXdwb3J0Q29uZmlnRGlyZWN0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5fZGlyZWN0aW9uO1xuICB9XG5cbiAgcHVibGljIHNldCBkaXJlY3Rpb24odmFsdWU6IEluVmlld3BvcnRDb25maWdEaXJlY3Rpb24pIHtcbiAgICBjb25zdCBpc1ZhbGlkVmFsdWUgPSAodmFsOiBhbnkpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIFtcbiAgICAgICAgICBJblZpZXdwb3J0Q29uZmlnRGlyZWN0aW9uLkJPVEgsXG4gICAgICAgICAgSW5WaWV3cG9ydENvbmZpZ0RpcmVjdGlvbi5IT1JJWk9OVEFMLFxuICAgICAgICAgIEluVmlld3BvcnRDb25maWdEaXJlY3Rpb24uVkVSVElDQUxcbiAgICAgICAgXS5pbmRleE9mKHZhbCkgPj0gMFxuICAgICAgKTtcbiAgICB9O1xuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGlzVmFsaWRWYWx1ZSh2YWx1ZSkgPyB2YWx1ZSA6IEluVmlld3BvcnRDb25maWdEaXJlY3Rpb24uQk9USDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY2hlY2tGbigpOiBJblZpZXdwb3J0Q29uZmlnQ2hlY2tGbiB7XG4gICAgcmV0dXJuIHRoaXMuX2NoZWNrRm47XG4gIH1cblxuICBwdWJsaWMgc2V0IGNoZWNrRm4odmFsdWU6IEluVmlld3BvcnRDb25maWdDaGVja0ZuKSB7XG4gICAgdGhpcy5fY2hlY2tGbiA9IHZhbHVlO1xuICB9XG59XG4iLCJpbXBvcnQgeyBJbmplY3RhYmxlLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEluVmlld3BvcnRDb25maWcgfSBmcm9tICcuL2luLXZpZXdwb3J0LWNvbmZpZyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5WaWV3cG9ydFJlZ2lzdHJ5RW50cnkge1xuICByb290OiBFbGVtZW50O1xuICB0YXJnZXRzOiBTZXQ8RWxlbWVudD47XG4gIG9ic2VydmVyOiBJbnRlcnNlY3Rpb25PYnNlcnZlcjtcbn1cblxuZXhwb3J0IHR5cGUgSW5WaWV3cG9ydFRyaWdnZXIgPSBTdWJqZWN0PEludGVyc2VjdGlvbk9ic2VydmVyRW50cnk+O1xuZXhwb3J0IHR5cGUgSW5WaWV3cG9ydFJlZ2lzdHJ5ID0gSW5WaWV3cG9ydFJlZ2lzdHJ5RW50cnlbXTtcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgSW5WaWV3cG9ydFNlcnZpY2Uge1xuICBwdWJsaWMgcmVhZG9ubHkgdHJpZ2dlciQ6IEluVmlld3BvcnRUcmlnZ2VyID0gbmV3IFN1YmplY3Q8SW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeT4oKTtcbiAgcHJpdmF0ZSByZWdpc3RyeTogSW5WaWV3cG9ydFJlZ2lzdHJ5ID0gW107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSkge31cblxuICBwcml2YXRlIGVtaXRUcmlnZ2VyKGVudHJpZXM6IEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlbXSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGVudHJpZXMpICYmIGVudHJpZXMubGVuZ3RoKSB7XG4gICAgICBlbnRyaWVzLmZvckVhY2goKGVudHJ5KSA9PiB0aGlzLnRyaWdnZXIkLm5leHQoZW50cnkpKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldFJvb3RFbGVtZW50KGVsZW1lbnQ/OiBFbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQgJiYgZWxlbWVudC5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUgPyBlbGVtZW50IDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBmaW5kRW50cnkocm9vdDogRWxlbWVudCkge1xuICAgIHJldHVybiB0aGlzLnJlZ2lzdHJ5LmZpbmQoKGVudHJ5KSA9PiBlbnRyeS5yb290ID09PSB0aGlzLmdldFJvb3RFbGVtZW50KHJvb3QpKTtcbiAgfVxuXG4gIHB1YmxpYyByZWdpc3Rlcih0YXJnZXQ6IEVsZW1lbnQsIGNvbmZpZzogSW5WaWV3cG9ydENvbmZpZyk6IHZvaWQge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIGNvbnN0IGZvdW5kZWRFbnRyeSA9IHRoaXMuZmluZEVudHJ5KGNvbmZpZy5yb290KTtcbiAgICAgIGlmIChmb3VuZGVkRW50cnkgJiYgIWZvdW5kZWRFbnRyeS50YXJnZXRzLmhhcyh0YXJnZXQpKSB7XG4gICAgICAgIGZvdW5kZWRFbnRyeS50YXJnZXRzLmFkZCh0YXJnZXQpO1xuICAgICAgICBmb3VuZGVkRW50cnkub2JzZXJ2ZXIub2JzZXJ2ZSh0YXJnZXQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uczogYW55ID0ge1xuICAgICAgICAgIHJvb3Q6IHRoaXMuZ2V0Um9vdEVsZW1lbnQoY29uZmlnLnJvb3QpLFxuICAgICAgICAgIHJvb3RNYXJnaW46IGNvbmZpZy5yb290TWFyZ2luLFxuICAgICAgICAgIHRocmVzaG9sZDogY29uZmlnLnRocmVzaG9sZFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlbnRyeTogSW5WaWV3cG9ydFJlZ2lzdHJ5RW50cnkgPSB7XG4gICAgICAgICAgcm9vdDogdGhpcy5nZXRSb290RWxlbWVudChjb25maWcucm9vdCksXG4gICAgICAgICAgdGFyZ2V0czogbmV3IFNldChbdGFyZ2V0XSksXG4gICAgICAgICAgb2JzZXJ2ZXI6IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcbiAgICAgICAgICAgIChlbnRyaWVzOiBJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5W10pID0+IHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLmVtaXRUcmlnZ2VyKGVudHJpZXMpKSxcbiAgICAgICAgICAgIG9wdGlvbnNcbiAgICAgICAgICApXG4gICAgICAgIH07XG4gICAgICAgIGVudHJ5Lm9ic2VydmVyLm9ic2VydmUodGFyZ2V0KTtcbiAgICAgICAgdGhpcy5yZWdpc3RyeSA9IFsuLi50aGlzLnJlZ2lzdHJ5LCBlbnRyeV07XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgdW5yZWdpc3Rlcih0YXJnZXQ6IEVsZW1lbnQsIGNvbmZpZzogSW5WaWV3cG9ydENvbmZpZyk6IHZvaWQge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIGNvbnN0IGZvdW5kZWRFbnRyeSA9IHRoaXMuZmluZEVudHJ5KGNvbmZpZy5yb290KTtcbiAgICAgIGlmIChmb3VuZGVkRW50cnkpIHtcbiAgICAgICAgY29uc3QgeyBvYnNlcnZlciwgdGFyZ2V0cyB9ID0gZm91bmRlZEVudHJ5O1xuICAgICAgICBpZiAodGFyZ2V0cy5oYXModGFyZ2V0KSkge1xuICAgICAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZSh0YXJnZXQpO1xuICAgICAgICAgIHRhcmdldHMuZGVsZXRlKHRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRhcmdldHMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICB0aGlzLnJlZ2lzdHJ5ID0gdGhpcy5yZWdpc3RyeS5maWx0ZXIoKGVudHJ5KSA9PiBlbnRyeSAhPT0gZm91bmRlZEVudHJ5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5qZWN0LFxuICBJbnB1dCxcbiAgT25EZXN0cm95LFxuICBPdXRwdXQsXG4gIFBMQVRGT1JNX0lEXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IEluVmlld3BvcnRDb25maWcsIEluVmlld3BvcnRDb25maWdPcHRpb25zIH0gZnJvbSAnLi9pbi12aWV3cG9ydC1jb25maWcnO1xuaW1wb3J0IHsgSW5WaWV3cG9ydFNlcnZpY2UgfSBmcm9tICcuL2luLXZpZXdwb3J0LnNlcnZpY2UnO1xuXG5leHBvcnQgY29uc3QgSW5WaWV3cG9ydE1ldGFkYXRhID0gU3ltYm9sKCdJblZpZXdwb3J0TWV0YWRhdGEnKTtcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2luVmlld3BvcnRdJ1xufSlcbmV4cG9ydCBjbGFzcyBJblZpZXdwb3J0RGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBjb25maWc6IEluVmlld3BvcnRDb25maWcgPSBuZXcgSW5WaWV3cG9ydENvbmZpZygpO1xuICBwcml2YXRlIHJlYWRvbmx5IHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuXG4gIEBJbnB1dCgnaW5WaWV3cG9ydE9wdGlvbnMnKVxuICBwcml2YXRlIHNldCBvcHRpb25zKHZhbHVlOiBJblZpZXdwb3J0Q29uZmlnT3B0aW9ucykge1xuICAgIHRoaXMuY29uZmlnID0gbmV3IEluVmlld3BvcnRDb25maWcodmFsdWUpO1xuICB9XG5cbiAgQE91dHB1dCgpIHB1YmxpYyByZWFkb25seSBpblZpZXdwb3J0QWN0aW9uOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoUExBVEZPUk1fSUQpIHByaXZhdGUgcGxhdGZvcm1JZDogT2JqZWN0LFxuICAgIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICBwcml2YXRlIGluVmlld3BvcnQ6IEluVmlld3BvcnRTZXJ2aWNlXG4gICkge31cblxuICBwdWJsaWMgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIGlmIChpc1BsYXRmb3JtQnJvd3Nlcih0aGlzLnBsYXRmb3JtSWQpKSB7XG4gICAgICB0aGlzLmluVmlld3BvcnQucmVnaXN0ZXIodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsIHRoaXMuY29uZmlnKTtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZChcbiAgICAgICAgdGhpcy5pblZpZXdwb3J0LnRyaWdnZXIkXG4gICAgICAgICAgLnBpcGUoZmlsdGVyKChlbnRyeTogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeSkgPT4gZW50cnkgJiYgZW50cnkudGFyZ2V0ID09PSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkpXG4gICAgICAgICAgLnN1YnNjcmliZSgoZW50cnk6IEludGVyc2VjdGlvbk9ic2VydmVyRW50cnkpID0+IHRoaXMuZW1pdEFjdGlvbihlbnRyeSwgZmFsc2UpKVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lbWl0QWN0aW9uKHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgaWYgKGlzUGxhdGZvcm1Ccm93c2VyKHRoaXMucGxhdGZvcm1JZCkpIHtcbiAgICAgIHRoaXMuaW5WaWV3cG9ydC51bnJlZ2lzdGVyKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCB0aGlzLmNvbmZpZyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjaGVjayhlbnRyeTogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeSwgZm9yY2U6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBpc1Zpc2libGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBwYXJ0aWFsbHlWaXNpYmxlID0gZW50cnkuaXNJbnRlcnNlY3RpbmcgfHwgZW50cnkuaW50ZXJzZWN0aW9uUmF0aW8gPiAwO1xuICAgICAgY29uc3QgY29tcGxldGVseVZpc2libGUgPSBlbnRyeS5pbnRlcnNlY3Rpb25SYXRpbyA+PSAxO1xuICAgICAgcmV0dXJuIHRoaXMuY29uZmlnLnBhcnRpYWwgPyBwYXJ0aWFsbHlWaXNpYmxlIDogY29tcGxldGVseVZpc2libGU7XG4gICAgfTtcbiAgICBjb25zdCB2aXNpYmxlID0gZm9yY2UgfHwgIWVudHJ5IHx8IGlzVmlzaWJsZSgpO1xuICAgIHJldHVybiB7IFtJblZpZXdwb3J0TWV0YWRhdGFdOiB7IGVudHJ5IH0sIHRhcmdldDogdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsIHZpc2libGUgfTtcbiAgfVxuXG4gIHByaXZhdGUgZW1pdEFjdGlvbihlbnRyeTogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeSwgZm9yY2U6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBjb25zdCBldmVudCA9IHRoaXMuY29uZmlnLmNoZWNrRm5cbiAgICAgID8gdGhpcy5jb25maWcuY2hlY2tGbihlbnRyeSwgeyBmb3JjZSwgY29uZmlnOiB0aGlzLmNvbmZpZyB9KVxuICAgICAgOiB0aGlzLmNoZWNrKGVudHJ5LCBmb3JjZSk7XG4gICAgdGhpcy5pblZpZXdwb3J0QWN0aW9uLmVtaXQoZXZlbnQpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEluVmlld3BvcnREaXJlY3RpdmUgfSBmcm9tICcuL2luLXZpZXdwb3J0LmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtJblZpZXdwb3J0RGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW0luVmlld3BvcnREaXJlY3RpdmVdXG59KVxuZXhwb3J0IGNsYXNzIEluVmlld3BvcnRNb2R1bGUge31cbiJdLCJuYW1lcyI6W10sIm1hcHBp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"],"sourceRoot":""}