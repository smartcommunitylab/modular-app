import leaflet from 'leaflet';
export class WcTrasportiMap {
    constructor() {
        this.mainMarkerIcon = "./assets/mymarker.png";
        this.poiMarkerIcon = "./assets/marker.png";
        this.centerPoint = null;
    }
    async showPoints() {
        this.internalShowPoints();
    }
    internalShowPoints() {
        this.pointsObj = JSON.parse(this.points);
        console.log("showpoints");
        var poiIcon = leaflet.icon({
            iconUrl: this.poiMarkerIcon,
            shadowUrl: null,
            iconSize: [40, 40],
            shadowSize: [0, 0],
            iconAnchor: [22, 94],
            shadowAnchor: [0, 0],
            popupAnchor: [-3, -76]
        });
        console.log("this.mapElement" + this.mapElement);
        if (this.centerPoint) {
            console.log("starting adding point");
            if (this.pointsObj) {
                this.pointsObj.forEach(element => {
                    console.log(element);
                    if (element.name !== 'myPos') {
                        leaflet.marker([element.lat, element.long], { icon: poiIcon }).addTo(this.map)
                            .on('click', () => {
                            this.poiSelected.emit(element);
                            console.log(element);
                        });
                    }
                });
            }
        }
    }
    setCenter() {
    }
    componentWillLoad() {
        this.centerPoint = {};
        if (this.center) {
            var center = JSON.parse(this.center);
            this.centerPoint.lat = center.latitude;
            this.centerPoint.long = center.longitude;
            if (this.points) {
                this.pointsObj = JSON.parse(this.points);
            }
        }
        else {
            this.centerPoint.lat = 0;
            this.centerPoint.long = 0;
        }
    }
    componentDidLoad() {
        var mainIcon = leaflet.icon({
            iconUrl: this.mainMarkerIcon,
            shadowUrl: null,
            iconSize: [40, 40],
            shadowSize: [50, 64],
            iconAnchor: [22, 94],
            shadowAnchor: [4, 62],
            popupAnchor: [-3, -76]
        });
        this.mapElement = this.element.shadowRoot.getElementById('map');
        if (!this.map) {
            console.log("this.map" + this.map);
            this.map = leaflet.map(this.mapElement, { tap: false }).setView([this.centerPoint['lat'], this.centerPoint['long']], 15);
            this.map.on('movend', () => {
                console.log(this.map.getBounds());
                this.mapMoved.emit(this.map.getBounds());
            });
            this.map.on('zoomend', () => {
                console.log(this.map.getBounds());
                this.mapMoved.emit(this.map.getBounds());
            });
            this.map.on('dragend', () => {
                console.log(this.map.getBounds());
                this.mapMoved.emit(this.map.getBounds());
            });
            leaflet.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(this.map);
            leaflet.marker([this.centerPoint['lat'], this.centerPoint['long']], { icon: mainIcon }).addTo(this.map);
        }
        this.mapInitiated.emit(this.map.getBounds());
    }
    render() {
        return ([
            h("link", { href: "https://unpkg.com/leaflet@1.1.0/dist/leaflet.css", rel: "stylesheet" }),
            h("div", { class: "map-container" },
                h("div", { id: "map" }))
        ]);
    }
    static get is() { return "wc-trasporti-map"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "center": {
            "type": String,
            "attr": "center"
        },
        "element": {
            "elementRef": true
        },
        "mainMarkerIcon": {
            "type": String,
            "attr": "main-marker-icon"
        },
        "poiMarkerIcon": {
            "type": String,
            "attr": "poi-marker-icon"
        },
        "points": {
            "type": String,
            "attr": "points"
        },
        "showPoints": {
            "method": true
        },
        "userpoisition": {
            "type": String,
            "attr": "userpoisition"
        },
        "zoomlevel": {
            "type": Number,
            "attr": "zoomlevel"
        }
    }; }
    static get events() { return [{
            "name": "poiSelected",
            "method": "poiSelected",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }, {
            "name": "mapInitiated",
            "method": "mapInitiated",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }, {
            "name": "mapMoved",
            "method": "mapMoved",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }]; }
    static get style() { return "/**style-placeholder:wc-trasporti-map:**/"; }
}
