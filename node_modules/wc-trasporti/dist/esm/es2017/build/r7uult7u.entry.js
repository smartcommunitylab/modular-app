import { h } from '../mycomponent.core.js';

import { a as moment } from './chunk-43a1777c.js';

class WcTrasportiStop {
    constructor() {
        this.rowHeight = 20;
        this.headerRowHeight = 25;
        this.stopsColWidth = 100;
        this.tableStyle = 'ic_text_size';
        this.headervariable = 90;
        this.stopsColLineHeight = 20;
        this.headerHeight = 44 + this.headervariable + 1;
        this.cellWidthBase = 50;
        this.cellHeightBase = 28;
        this.firstRowHeight = 28;
        this.scrollLeftPosition = 0;
        this.tt = null;
        this.runningDate = new Date();
        this.expandStr = function (str) {
            if (str.length < 9) {
                var m = 9 - str.length;
                var l = Math.round(m / 2);
                for (var i = 0; i < l; i++) {
                    str = '&nbsp;' + str;
                }
                for (var i = 0; i < m - l; i++) {
                    str += '&nbsp';
                }
            }
            return str;
        };
    }
    changeStyle() {
        this.changeStyleTable();
    }
    handleScroll(ev) {
        console.log('the body was scrolled', ev);
    }
    setBiggerStyle() {
        this.littletable = true;
        var rowHeight = 30;
        this.rowHeight = rowHeight;
        this.headerRowHeight = 30;
        this.stopsColWidth = 150;
        this.stopsColLineHeight = 30;
        var headerTable = this.element.shadowRoot.querySelector('#header-table');
        var headerheight = 90;
        if (headerTable) {
            headerheight = headerTable.clientHeight;
        }
        this.headervariable = headerheight + 5 * this.header_row_number;
        var headerHeight = 44 + this.headervariable + 1;
        this.fontsize = 16;
        this.scrollHeight = window.innerHeight - headerHeight;
    }
    ;
    setSmallerStyle() {
        this.littletable = false;
        var rowHeight = 20;
        this.rowHeight = rowHeight;
        this.stopsColWidth = 100;
        this.fontsize = 12;
        this.stopsColLineHeight = 20;
        var headerTable = this.element.shadowRoot.querySelector('#header-table');
        var headerheight = 90;
        if (headerTable) {
            headerheight = headerTable.clientHeight;
        }
        this.headervariable = headerheight + 5 * this.header_row_number;
        var headerHeight = 44 + this.headervariable + 1;
        this.scrollHeight = window.innerHeight - headerHeight;
    }
    ;
    changeStyleTable() {
        setTimeout(() => {
            if (!this.littletable) {
                this.setBiggerStyle();
            }
            else {
                this.setSmallerStyle();
            }
            this.tableStyle = this.littletable ? 'ic_text_size' : 'ic_text_size_outline';
        }, 100);
        setTimeout(function () {
        }, 2000);
    }
    initMeasures(data, noscroll) {
        if (window.innerHeight < window.innerWidth) {
            this.stopsColWidth = 170;
        }
        else {
            if (this.littletable) {
                this.stopsColWidth = 150;
            }
            else {
                this.stopsColWidth = 100;
            }
        }
        this.header = null;
        this.col = null;
        if (!data.tripIds || data.tripIds.length == 0)
            return;
        this.tableHeight = data.stops.length * this.rowHeight;
        this.scrollWidth = window.innerWidth + (this.accessibility ? 0 : 25);
        this.scrollHeight = window.innerHeight - this.headerHeight;
        this.tableHeaderHeight = this.header_row_number * this.headerRowHeight;
        if (!noscroll) {
            setTimeout(function () {
            }, 300);
        }
    }
    componentWillLoad() {
        this.changeStyle();
        this.buildData();
    }
    buildData() {
        this.dataTT = JSON.parse(this.data);
        this.rootstyle();
        this.Fetch();
        this.initMeasures(this.dataTT, true);
    }
    rootstyle() {
        let root = document.documentElement;
        var top_table = 70;
        root.style.setProperty('--dim-orari-wid', (screen.width - (screen.width / 100 * 85)).toString() + 'px');
        root.style.setProperty('--top-table', top_table + 'px');
        root.style.setProperty('--dim-orari-hei', (screen.height - top_table).toString() + 'px');
        root.style.setProperty('--dim-fermate-wid', (screen.width - (screen.width / 100 * 15.5)).toString() + 'px');
        root.style.setProperty('--dim-fermate-hei', (screen.height - top_table).toString() + 'px');
    }
    BiancoNero(param) {
        this.fermate = "";
        for (let i in param) {
            this.fermate += parseInt(i) % 2 == 0 ? "<div id='grigioFermate'>" : "<div id='biancoFermate'>";
            this.fermate += param[i].toString() + "</div>";
        }
    }
    componentDidLoad() {
        const list = this.element.shadowRoot.querySelectorAll('li.my-list');
        [].forEach.call(list, li => li.style.color = 'red');
        this.setStyle();
    }
    setStyle() {
        this.titleBar = this.element.shadowRoot.querySelector('.titleBar');
        if (this.titleBar) {
            this.titleBar.style.backgroundColor = this.color;
            this.titleBar.style.color = this.textColor(this.color);
        }
        this.directionBar = this.element.shadowRoot.querySelector('.directionBar');
        if (this.directionBar) {
            this.directionBar.style.backgroundColor = this.color;
            this.directionBar.style.color = this.textColor(this.color);
        }
        this.subtitleBar = this.element.shadowRoot.querySelector('.day-bar');
        if (this.subtitleBar) {
            this.subtitleBar.style.backgroundColor = this.color;
            this.subtitleBar.style.color = this.textColor(this.color);
        }
    }
    getDelayValue(delay) {
        var res = '';
        if (delay && delay.SERVICE && delay.SERVICE > 0) {
            res += delay.SERVICE + '\'';
        }
        if (delay && delay.USER && delay.USER > 0) {
            if (res.length > 0)
                res += ' / ';
            res += delay.USER + '\'';
        }
        return res;
    }
    StampaOrari(data) {
        var time;
        var previousTime;
        var rowContent = "";
        if (data) {
            for (var k = 0; k < data.length; k++) {
                time = new Date(data[k].time);
                if (k == 0) {
                    rowContent = "<span class='hour'>" + (time.getHours() < 10 ? ' ' : '') + time.getHours() + "</span>|";
                }
                if (k > 0 && previousTime && time.getHours() != previousTime.getHours()) {
                    if (time.getDay() != previousTime.getDay()) {
                        break;
                    }
                    rowContent += "<br/><span class='hour'>" + time.getHours() + "</span>|";
                }
                var str = (time.getHours() < 10 ? '0' : '') + time.getHours() + ":" + (time.getMinutes() < 10 ? '0' : '') + time.getMinutes();
                rowContent += '&nbsp;&nbsp;' + str + '&nbsp;&nbsp;';
                previousTime = time;
            }
        }
        this.orari = rowContent;
    }
    ;
    getTripText(tripLabel) {
        return tripLabel;
    }
    Fetch() {
        if (this.dataTT) {
            console.log(this.dataTT);
            this.StampaOrari(this.dataTT);
        }
        if (this.citta && this.numero) {
            this.remoteFetch();
        }
    }
    remoteFetch() {
        fetch('https://os.smartcommunitylab.it/core.mobility/timetable/' + this.citta + '/' + this.numero)
            .then((response) => {
            response.json();
        })
            .then(response => {
            this.dataTT = response['stopNames'];
            this.BiancoNero(this.dataTT);
            this.dataTT = response['trips'];
            this.StampaOrari(this.dataTT['times']);
        });
    }
    scrollOrari(event) {
        event = event;
        if (this.header == null) {
            this.header = this.element.shadowRoot.querySelector('#table-header');
        }
        if (this.col == null) {
            this.col = this.element.shadowRoot.querySelector('#table-col');
        }
        var pos = {
            top: event.detail.currentY,
            left: event.detail.currentX
        };
        if (this.header != null) {
            this.header.style.top = pos.top + 'px';
        }
        if (this.col != null) {
            this.col.style.left = pos.left + 'px';
        }
    }
    visualizza(oggetto) {
        return oggetto;
    }
    prevDate() {
        this.changeDateEvent.emit('prevDate');
    }
    nextDate() {
        this.changeDateEvent.emit('nextDate');
    }
    textColor(color) {
        if (this.isDarkColor(color))
            return '#fff';
        return '#000';
    }
    ;
    isDarkColor(color) {
        if (!color)
            return true;
        var c = color.substring(1);
        var rgb = parseInt(c, 16);
        var r = (rgb >> 16) & 0xff;
        var g = (rgb >> 8) & 0xff;
        var b = (rgb >> 0) & 0xff;
        var luma = (r + g + b) / 3;
        return luma < 128;
    }
    ;
    render() {
        var styleTableTable = {
            left: `50%`,
            top: `${this.tableHeaderHeight}px`,
            lineHeight: `${this.stopsColLineHeight}px`,
            backgroundSize: `100% ${this.rowHeight * 2}px`,
            fontSize: `${this.fontsize}px`,
            backgroundImage: `linear-gradient(180deg,transparent, transparent ${this.rowHeight}px, #eee ${this.rowHeight}px, #eee ${this.rowHeight * 2}px)`
        };
        return [
            h("div", null,
                h("div", { id: "header-table" },
                    h("div", { class: "row titleBar" },
                        h("div", { class: "col tt-subtitle" }, this.route)),
                    h("div", { class: "row directionBar" },
                        h("div", { class: "col tt-subtitle" }, this.name)),
                    h("ion-row", { class: "day-bar" },
                        h("ion-col", { size: "1", class: "col col-25 tt-day btn", onClick: () => this.prevDate() },
                            h("ion-icon", { name: "arrow-dropleft" })),
                        h("ion-col", { size: "10", class: "col col-50 tt-day" },
                            this.formatDate(this.day, 'ddd'),
                            " ",
                            this.formatDate(this.day, 'D/M/YYYY')),
                        h("ion-col", { size: "1", class: "col col-25 tt-day btn", onClick: () => this.nextDate() },
                            h("ion-icon", { name: "arrow-dropright" })))),
                h("div", { id: "table-table", innerHTML: this.visualizza(this.orari), style: styleTableTable }))
        ];
    }
    formatDate(day, format) {
        return moment(Number(day)).format(format);
    }
    static get is() { return "wc-trasporti-stop"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "accessibility": {
            "type": Boolean,
            "attr": "accessibility"
        },
        "arrows": {
            "type": Boolean,
            "attr": "arrows"
        },
        "citta": {
            "type": String,
            "attr": "citta"
        },
        "color": {
            "type": String,
            "attr": "color"
        },
        "data": {
            "type": String,
            "attr": "data"
        },
        "dataTT": {
            "state": true
        },
        "day": {
            "type": String,
            "attr": "day"
        },
        "element": {
            "elementRef": true
        },
        "fermate": {
            "state": true
        },
        "font": {
            "type": String,
            "attr": "font"
        },
        "fontsize": {
            "state": true
        },
        "labeldelay": {
            "type": String,
            "attr": "labeldelay"
        },
        "labeltrips": {
            "type": String,
            "attr": "labeltrips"
        },
        "littletable": {
            "type": Boolean,
            "attr": "littletable",
            "watchCallbacks": ["changeStyle"]
        },
        "name": {
            "type": String,
            "attr": "name"
        },
        "numero": {
            "type": String,
            "attr": "numero"
        },
        "orari": {
            "state": true
        },
        "route": {
            "type": String,
            "attr": "route"
        },
        "showtrips": {
            "type": Boolean,
            "attr": "showtrips"
        },
        "tripsvalue": {
            "type": String,
            "attr": "tripsvalue"
        }
    }; }
    static get events() { return [{
            "name": "changeDateEvent",
            "method": "changeDateEvent",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }, {
            "name": "showStopEvent",
            "method": "showStopEvent",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }]; }
    static get listeners() { return [{
            "name": "scroll",
            "method": "handleScroll",
            "passive": true
        }]; }
    static get style() { return "#colonna1{width:20%}#colonna1,#riga1{position:relative}#riga1{height:6%}*{font-family:monospace}#listaFermate{position:absolute;top:var(--top-table);height:var(--dim-orari-hei);overflow:auto;overflow-y:hidden}#fermate{position:absolute;top:0;min-width:100px;max-width:300px;width:10%}#contentFermate{height:800px;width:300px}#myDIV{position:absolute;top:var(--top-table);height:var(--dim-fermate-hei);width:var(--dim-fermate-wid);overflow:auto;overflow-x:var(--blocca-barra)}#content{height:800px;width:2000px}#orari{position:absolute;top:0;width:10%;left:15%}#biancoOrari{background-color:#fff}#biancoOrari,#grigioOrari{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;position:relative}#grigioOrari{background-color:#eee}#biancoFermate{background-color:#fff;position:relative}#grigioFermate{background-color:#eee;position:relative}::-webkit-scrollbar{width:10px}::-webkit-scrollbar-thumb,::-webkit-scrollbar-track{background:hsla(0,0%,100%,0)}::-webkit-scrollbar-thumb:hover{background:hsla(0,0%,100%,0)}.tt-day{font-size:20px;line-height:40px;text-align:center;padding:0;text-transform:uppercase;white-space:nowrap}.tt-day.btn{font-size:30px}.tt-day.btn a.activated,.tt-day.btn a:active,.tt-day.btn a:focus,.tt-day.btn a:hover{opacity:.5}#table-header{white-space:nowrap;font-family:RobotoMono;position:absolute;background-color:#fff;font-size:12px;z-index:10}#table-header div{border-bottom:1px solid #bbb;height:25px}#table-header div:first-child{color:#cd251c}.header-row-types{height:20px}#table-table{white-space:nowrap;font-size:12px;position:absolute;-webkit-transform:translate(-50%);transform:translate(-50%);-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}#table-table br{font-family:RobotoMono}#table-col{line-height:20px;white-space:nowrap;border-right:1px solid #bbb;z-index:10;overflow:hidden;text-overflow:ellipsis}#table-col,#table-corner{font-size:12px;position:absolute;background-color:#fff;padding-left:3px}#table-corner{height:25px;z-index:100;text-align:left}#table-corner div{height:25px;border-bottom:1px solid #bbb;border-right:1px solid #bbb;background-color:#fff}#table-corner>div .corner-delay{margin-left:10px;vertical-align:top}.accessibilityBullet{width:20px}.delay{padding-left:40px}.table-container{padding:0}.table-container ion-scroll{margin-top:0}.tt-table{position:absolute;left:-25px;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}.tt-table-acc{left:0!important}.tt-table #table-col div{width:20px;display:inline-block;margin-right:5px;text-align:center}.tt-subtitle{text-align:center}.table-accessibility{color:#2975a7;margin-right:4px;font-size:25px}.hour{font-weight:700}.separator{height:100%;width:1px;background-color:#000}"; }
}

export { WcTrasportiStop };
