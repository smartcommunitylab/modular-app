/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface WcCategoryButton {
        /**
          * Colore sfondo container
         */
        "bgColor": string;
        /**
          * Nome della categoria
         */
        "category": string;
        /**
          * Riferimento icona, vedi file 'shared/icons.tsx'
         */
        "icon": string;
        /**
          * Allineamento icona - top, left, right
         */
        "iconAlign": string;
        /**
          * Colore riempimento icona
         */
        "iconFill": string;
        /**
          * Colore testo
         */
        "textColor": string;
    }
    interface WcDetailInfo {
        /**
          * The first name
         */
        "info": any;
    }
    interface WcDetails {
        /**
          * Scritta alternativa per immagine
         */
        "altImage": string;
        /**
          * Oggetto JSON per contatti e info aggiuntive
         */
        "contacts": string;
        "distance": string;
        "expandable": boolean;
        "expanse": boolean;
        /**
          * Colore titoli
         */
        "headingColor": string;
        /**
          * Oggeto JSON contenente i dettagli dei contatti.
         */
        "identifier": string;
        /**
          * Immagine del percorso
         */
        "img": string;
        /**
          * Informazioni a fine pagina
         */
        "info": string;
        /**
          * Lingua da utilizzare
         */
        "language": string;
        /**
          * Colore tag e puslanti
         */
        "secondColor": string;
        "showimg": boolean;
        "showtags": boolean;
        "stringsinput": string;
        /**
          * Sottotitolo del percorso
         */
        "subtitle": string;
        /**
          * Descrizione e testo
         */
        "text": string;
        /**
          * Titolo del percorso
         */
        "titlePath": string;
    }
    interface WcGallery {
        "gallery": any;
    }
    interface WcListCategories {
        /**
          * The first name
         */
        "category": any;
    }
    interface WcListPoi {
        /**
          * The first name
         */
        "poi": any;
        /**
          * The middle name
         */
        "wcAddress": string;
    }
    interface WcMap {
        /**
          * Icona marker per "posizione attuale"
         */
        "mainMarkerIcon": string;
        "mypos": string;
        /**
          * Icona marker POI
         */
        "poiMarkerIcon": string;
        /**
          * Array di punti da inserire nella mappa
         */
        "points": string;
        "tracciato": string;
    }
    interface WcModal {
        /**
          * Testo del bottone
         */
        "btnText": string;
        /**
          * Contenuto inviato nell'evento al click del bottone
         */
        "data": any;
        /**
          * Visualizza/Nascondi modal
         */
        "shown": boolean;
        /**
          * Contenuto
         */
        "text": string;
        /**
          * Titolo Modale
         */
        "titleMod": string;
    }
    interface WcPathInfo {
        /**
          * Colore titoli
         */
        "headingColor": string;
        /**
          * Immagine del percorso
         */
        "img": string;
        /**
          * Informazioni a fine pagina
         */
        "info": string;
        /**
          * Sottotitolo del percorso
         */
        "subtitle": string;
        /**
          * Descrizione e testo
         */
        "text": string;
        /**
          * Titolo del percorso
         */
        "titlePath": string;
    }
    interface WcPathListEl {
        /**
          * Colore sfondo card
         */
        "bgColor": string;
        /**
          * Colore descrizione breve
         */
        "descColor": string;
        /**
          * ID percorso
         */
        "identifier": string;
        /**
          * Immagine del percorso
         */
        "img": string;
        /**
          * Colore titolo e bordo immagine
         */
        "mainColor": string;
        /**
          * Descrizione breve
         */
        "text": string;
        /**
          * Titolo del percorso
         */
        "titlePath": string;
        /**
          * Tipo di POI
         */
        "type": string;
    }
    interface WcTabs {
        /**
          * Colore sfondo tabs
         */
        "bgColor": string;
        /**
          * Oggeto JSON contenente i dettagli delle tab.
         */
        "content": string;
        /**
          * Colore icona di default (pagina non attiva)
         */
        "iconColor": string;
        /**
          * Identificativo pagina attiva, fare riferimento a propriet√† "content"
         */
        "tabActived": string;
    }
}
export interface WcCategoryButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcCategoryButtonElement;
}
export interface WcDetailsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcDetailsElement;
}
export interface WcGalleryCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcGalleryElement;
}
export interface WcListPoiCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcListPoiElement;
}
export interface WcMapCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcMapElement;
}
export interface WcModalCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcModalElement;
}
export interface WcPathListElCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcPathListElElement;
}
export interface WcTabsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcTabsElement;
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLWcCategoryButtonElement extends Components.WcCategoryButton, HTMLStencilElement {
    }
    var HTMLWcCategoryButtonElement: {
        prototype: HTMLWcCategoryButtonElement;
        new (): HTMLWcCategoryButtonElement;
    };
    interface HTMLWcDetailInfoElement extends Components.WcDetailInfo, HTMLStencilElement {
    }
    var HTMLWcDetailInfoElement: {
        prototype: HTMLWcDetailInfoElement;
        new (): HTMLWcDetailInfoElement;
    };
    interface HTMLWcDetailsElement extends Components.WcDetails, HTMLStencilElement {
    }
    var HTMLWcDetailsElement: {
        prototype: HTMLWcDetailsElement;
        new (): HTMLWcDetailsElement;
    };
    interface HTMLWcGalleryElement extends Components.WcGallery, HTMLStencilElement {
    }
    var HTMLWcGalleryElement: {
        prototype: HTMLWcGalleryElement;
        new (): HTMLWcGalleryElement;
    };
    interface HTMLWcListCategoriesElement extends Components.WcListCategories, HTMLStencilElement {
    }
    var HTMLWcListCategoriesElement: {
        prototype: HTMLWcListCategoriesElement;
        new (): HTMLWcListCategoriesElement;
    };
    interface HTMLWcListPoiElement extends Components.WcListPoi, HTMLStencilElement {
    }
    var HTMLWcListPoiElement: {
        prototype: HTMLWcListPoiElement;
        new (): HTMLWcListPoiElement;
    };
    interface HTMLWcMapElement extends Components.WcMap, HTMLStencilElement {
    }
    var HTMLWcMapElement: {
        prototype: HTMLWcMapElement;
        new (): HTMLWcMapElement;
    };
    interface HTMLWcModalElement extends Components.WcModal, HTMLStencilElement {
    }
    var HTMLWcModalElement: {
        prototype: HTMLWcModalElement;
        new (): HTMLWcModalElement;
    };
    interface HTMLWcPathInfoElement extends Components.WcPathInfo, HTMLStencilElement {
    }
    var HTMLWcPathInfoElement: {
        prototype: HTMLWcPathInfoElement;
        new (): HTMLWcPathInfoElement;
    };
    interface HTMLWcPathListElElement extends Components.WcPathListEl, HTMLStencilElement {
    }
    var HTMLWcPathListElElement: {
        prototype: HTMLWcPathListElElement;
        new (): HTMLWcPathListElElement;
    };
    interface HTMLWcTabsElement extends Components.WcTabs, HTMLStencilElement {
    }
    var HTMLWcTabsElement: {
        prototype: HTMLWcTabsElement;
        new (): HTMLWcTabsElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "wc-category-button": HTMLWcCategoryButtonElement;
        "wc-detail-info": HTMLWcDetailInfoElement;
        "wc-details": HTMLWcDetailsElement;
        "wc-gallery": HTMLWcGalleryElement;
        "wc-list-categories": HTMLWcListCategoriesElement;
        "wc-list-poi": HTMLWcListPoiElement;
        "wc-map": HTMLWcMapElement;
        "wc-modal": HTMLWcModalElement;
        "wc-path-info": HTMLWcPathInfoElement;
        "wc-path-list-el": HTMLWcPathListElElement;
        "wc-tabs": HTMLWcTabsElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface WcCategoryButton {
        /**
          * Colore sfondo container
         */
        "bgColor"?: string;
        /**
          * Nome della categoria
         */
        "category"?: string;
        /**
          * Riferimento icona, vedi file 'shared/icons.tsx'
         */
        "icon"?: string;
        /**
          * Allineamento icona - top, left, right
         */
        "iconAlign"?: string;
        /**
          * Colore riempimento icona
         */
        "iconFill"?: string;
        "onCategorySelected"?: (event: WcCategoryButtonCustomEvent<any>) => void;
        /**
          * Colore testo
         */
        "textColor"?: string;
    }
    interface WcDetailInfo {
        /**
          * The first name
         */
        "info"?: any;
    }
    interface WcDetails {
        /**
          * Scritta alternativa per immagine
         */
        "altImage"?: string;
        /**
          * Oggetto JSON per contatti e info aggiuntive
         */
        "contacts"?: string;
        "distance"?: string;
        "expandable"?: boolean;
        "expanse"?: boolean;
        /**
          * Colore titoli
         */
        "headingColor"?: string;
        /**
          * Oggeto JSON contenente i dettagli dei contatti.
         */
        "identifier"?: string;
        /**
          * Immagine del percorso
         */
        "img"?: string;
        /**
          * Informazioni a fine pagina
         */
        "info"?: string;
        /**
          * Lingua da utilizzare
         */
        "language"?: string;
        "onContactClick"?: (event: WcDetailsCustomEvent<any>) => void;
        "onExpandeClick"?: (event: WcDetailsCustomEvent<any>) => void;
        "onTagClicked"?: (event: WcDetailsCustomEvent<any>) => void;
        /**
          * Colore tag e puslanti
         */
        "secondColor"?: string;
        "showimg"?: boolean;
        "showtags"?: boolean;
        "stringsinput"?: string;
        /**
          * Sottotitolo del percorso
         */
        "subtitle"?: string;
        /**
          * Descrizione e testo
         */
        "text"?: string;
        /**
          * Titolo del percorso
         */
        "titlePath"?: string;
    }
    interface WcGallery {
        "gallery"?: any;
        "onElementSelected"?: (event: WcGalleryCustomEvent<any>) => void;
    }
    interface WcListCategories {
        /**
          * The first name
         */
        "category"?: any;
    }
    interface WcListPoi {
        "onPoiCompleted"?: (event: WcListPoiCustomEvent<any>) => void;
        /**
          * The first name
         */
        "poi"?: any;
        /**
          * The middle name
         */
        "wcAddress"?: string;
    }
    interface WcMap {
        /**
          * Icona marker per "posizione attuale"
         */
        "mainMarkerIcon"?: string;
        "mypos"?: string;
        "onPoiSelected"?: (event: WcMapCustomEvent<any>) => void;
        /**
          * Icona marker POI
         */
        "poiMarkerIcon"?: string;
        /**
          * Array di punti da inserire nella mappa
         */
        "points"?: string;
        "tracciato"?: string;
    }
    interface WcModal {
        /**
          * Testo del bottone
         */
        "btnText"?: string;
        /**
          * Contenuto inviato nell'evento al click del bottone
         */
        "data"?: any;
        "onActionSelected"?: (event: WcModalCustomEvent<any>) => void;
        /**
          * Visualizza/Nascondi modal
         */
        "shown"?: boolean;
        /**
          * Contenuto
         */
        "text"?: string;
        /**
          * Titolo Modale
         */
        "titleMod"?: string;
    }
    interface WcPathInfo {
        /**
          * Colore titoli
         */
        "headingColor"?: string;
        /**
          * Immagine del percorso
         */
        "img"?: string;
        /**
          * Informazioni a fine pagina
         */
        "info"?: string;
        /**
          * Sottotitolo del percorso
         */
        "subtitle"?: string;
        /**
          * Descrizione e testo
         */
        "text"?: string;
        /**
          * Titolo del percorso
         */
        "titlePath"?: string;
    }
    interface WcPathListEl {
        /**
          * Colore sfondo card
         */
        "bgColor"?: string;
        /**
          * Colore descrizione breve
         */
        "descColor"?: string;
        /**
          * ID percorso
         */
        "identifier"?: string;
        /**
          * Immagine del percorso
         */
        "img"?: string;
        /**
          * Colore titolo e bordo immagine
         */
        "mainColor"?: string;
        "onPathSelected"?: (event: WcPathListElCustomEvent<any>) => void;
        /**
          * Descrizione breve
         */
        "text"?: string;
        /**
          * Titolo del percorso
         */
        "titlePath"?: string;
        /**
          * Tipo di POI
         */
        "type"?: string;
    }
    interface WcTabs {
        /**
          * Colore sfondo tabs
         */
        "bgColor"?: string;
        /**
          * Oggeto JSON contenente i dettagli delle tab.
         */
        "content"?: string;
        /**
          * Colore icona di default (pagina non attiva)
         */
        "iconColor"?: string;
        "onTabSelected"?: (event: WcTabsCustomEvent<any>) => void;
        /**
          * Identificativo pagina attiva, fare riferimento a propriet√† "content"
         */
        "tabActived"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "wc-category-button": WcCategoryButton;
        "wc-detail-info": WcDetailInfo;
        "wc-details": WcDetails;
        "wc-gallery": WcGallery;
        "wc-list-categories": WcListCategories;
        "wc-list-poi": WcListPoi;
        "wc-map": WcMap;
        "wc-modal": WcModal;
        "wc-path-info": WcPathInfo;
        "wc-path-list-el": WcPathListEl;
        "wc-tabs": WcTabs;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "wc-category-button": LocalJSX.WcCategoryButton & JSXBase.HTMLAttributes<HTMLWcCategoryButtonElement>;
            "wc-detail-info": LocalJSX.WcDetailInfo & JSXBase.HTMLAttributes<HTMLWcDetailInfoElement>;
            "wc-details": LocalJSX.WcDetails & JSXBase.HTMLAttributes<HTMLWcDetailsElement>;
            "wc-gallery": LocalJSX.WcGallery & JSXBase.HTMLAttributes<HTMLWcGalleryElement>;
            "wc-list-categories": LocalJSX.WcListCategories & JSXBase.HTMLAttributes<HTMLWcListCategoriesElement>;
            "wc-list-poi": LocalJSX.WcListPoi & JSXBase.HTMLAttributes<HTMLWcListPoiElement>;
            "wc-map": LocalJSX.WcMap & JSXBase.HTMLAttributes<HTMLWcMapElement>;
            "wc-modal": LocalJSX.WcModal & JSXBase.HTMLAttributes<HTMLWcModalElement>;
            "wc-path-info": LocalJSX.WcPathInfo & JSXBase.HTMLAttributes<HTMLWcPathInfoElement>;
            "wc-path-list-el": LocalJSX.WcPathListEl & JSXBase.HTMLAttributes<HTMLWcPathListElElement>;
            "wc-tabs": LocalJSX.WcTabs & JSXBase.HTMLAttributes<HTMLWcTabsElement>;
        }
    }
}
